
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Behaviour` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Behaviour
 * 
 */
export type BehaviourModel = runtime.Types.Result.DefaultSelection<Prisma.$BehaviourPayload>

export type AggregateBehaviour = {
  _count: BehaviourCountAggregateOutputType | null
  _min: BehaviourMinAggregateOutputType | null
  _max: BehaviourMaxAggregateOutputType | null
}

export type BehaviourMinAggregateOutputType = {
  id: string | null
  student_id: string | null
  class_id: string | null
  teacher_id: string | null
  description: string | null
  datetime: Date | null
  remark: $Enums.Remark | null
  notes: string | null
  created_at: Date | null
  updated_at: Date | null
  deleted_at: Date | null
}

export type BehaviourMaxAggregateOutputType = {
  id: string | null
  student_id: string | null
  class_id: string | null
  teacher_id: string | null
  description: string | null
  datetime: Date | null
  remark: $Enums.Remark | null
  notes: string | null
  created_at: Date | null
  updated_at: Date | null
  deleted_at: Date | null
}

export type BehaviourCountAggregateOutputType = {
  id: number
  student_id: number
  class_id: number
  teacher_id: number
  description: number
  datetime: number
  remark: number
  notes: number
  created_at: number
  updated_at: number
  deleted_at: number
  _all: number
}


export type BehaviourMinAggregateInputType = {
  id?: true
  student_id?: true
  class_id?: true
  teacher_id?: true
  description?: true
  datetime?: true
  remark?: true
  notes?: true
  created_at?: true
  updated_at?: true
  deleted_at?: true
}

export type BehaviourMaxAggregateInputType = {
  id?: true
  student_id?: true
  class_id?: true
  teacher_id?: true
  description?: true
  datetime?: true
  remark?: true
  notes?: true
  created_at?: true
  updated_at?: true
  deleted_at?: true
}

export type BehaviourCountAggregateInputType = {
  id?: true
  student_id?: true
  class_id?: true
  teacher_id?: true
  description?: true
  datetime?: true
  remark?: true
  notes?: true
  created_at?: true
  updated_at?: true
  deleted_at?: true
  _all?: true
}

export type BehaviourAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Behaviour to aggregate.
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Behaviours to fetch.
   */
  orderBy?: Prisma.BehaviourOrderByWithRelationInput | Prisma.BehaviourOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.BehaviourWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Behaviours from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Behaviours.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Behaviours
  **/
  _count?: true | BehaviourCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: BehaviourMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: BehaviourMaxAggregateInputType
}

export type GetBehaviourAggregateType<T extends BehaviourAggregateArgs> = {
      [P in keyof T & keyof AggregateBehaviour]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateBehaviour[P]>
    : Prisma.GetScalarType<T[P], AggregateBehaviour[P]>
}




export type BehaviourGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BehaviourWhereInput
  orderBy?: Prisma.BehaviourOrderByWithAggregationInput | Prisma.BehaviourOrderByWithAggregationInput[]
  by: Prisma.BehaviourScalarFieldEnum[] | Prisma.BehaviourScalarFieldEnum
  having?: Prisma.BehaviourScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: BehaviourCountAggregateInputType | true
  _min?: BehaviourMinAggregateInputType
  _max?: BehaviourMaxAggregateInputType
}

export type BehaviourGroupByOutputType = {
  id: string
  student_id: string
  class_id: string
  teacher_id: string
  description: string
  datetime: Date
  remark: $Enums.Remark
  notes: string | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  _count: BehaviourCountAggregateOutputType | null
  _min: BehaviourMinAggregateOutputType | null
  _max: BehaviourMaxAggregateOutputType | null
}

type GetBehaviourGroupByPayload<T extends BehaviourGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<BehaviourGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof BehaviourGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], BehaviourGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], BehaviourGroupByOutputType[P]>
      }
    >
  >



export type BehaviourWhereInput = {
  AND?: Prisma.BehaviourWhereInput | Prisma.BehaviourWhereInput[]
  OR?: Prisma.BehaviourWhereInput[]
  NOT?: Prisma.BehaviourWhereInput | Prisma.BehaviourWhereInput[]
  id?: Prisma.StringFilter<"Behaviour"> | string
  student_id?: Prisma.StringFilter<"Behaviour"> | string
  class_id?: Prisma.StringFilter<"Behaviour"> | string
  teacher_id?: Prisma.StringFilter<"Behaviour"> | string
  description?: Prisma.StringFilter<"Behaviour"> | string
  datetime?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  remark?: Prisma.EnumRemarkFilter<"Behaviour"> | $Enums.Remark
  notes?: Prisma.StringNullableFilter<"Behaviour"> | string | null
  created_at?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  deleted_at?: Prisma.DateTimeNullableFilter<"Behaviour"> | Date | string | null
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
  teacher?: Prisma.XOR<Prisma.TeacherScalarRelationFilter, Prisma.TeacherWhereInput>
}

export type BehaviourOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  teacher_id?: Prisma.SortOrder
  description?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  student?: Prisma.StudentOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
  teacher?: Prisma.TeacherOrderByWithRelationInput
}

export type BehaviourWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.BehaviourWhereInput | Prisma.BehaviourWhereInput[]
  OR?: Prisma.BehaviourWhereInput[]
  NOT?: Prisma.BehaviourWhereInput | Prisma.BehaviourWhereInput[]
  student_id?: Prisma.StringFilter<"Behaviour"> | string
  class_id?: Prisma.StringFilter<"Behaviour"> | string
  teacher_id?: Prisma.StringFilter<"Behaviour"> | string
  description?: Prisma.StringFilter<"Behaviour"> | string
  datetime?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  remark?: Prisma.EnumRemarkFilter<"Behaviour"> | $Enums.Remark
  notes?: Prisma.StringNullableFilter<"Behaviour"> | string | null
  created_at?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  deleted_at?: Prisma.DateTimeNullableFilter<"Behaviour"> | Date | string | null
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
  teacher?: Prisma.XOR<Prisma.TeacherScalarRelationFilter, Prisma.TeacherWhereInput>
}, "id" | "id">

export type BehaviourOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  teacher_id?: Prisma.SortOrder
  description?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.BehaviourCountOrderByAggregateInput
  _max?: Prisma.BehaviourMaxOrderByAggregateInput
  _min?: Prisma.BehaviourMinOrderByAggregateInput
}

export type BehaviourScalarWhereWithAggregatesInput = {
  AND?: Prisma.BehaviourScalarWhereWithAggregatesInput | Prisma.BehaviourScalarWhereWithAggregatesInput[]
  OR?: Prisma.BehaviourScalarWhereWithAggregatesInput[]
  NOT?: Prisma.BehaviourScalarWhereWithAggregatesInput | Prisma.BehaviourScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Behaviour"> | string
  student_id?: Prisma.StringWithAggregatesFilter<"Behaviour"> | string
  class_id?: Prisma.StringWithAggregatesFilter<"Behaviour"> | string
  teacher_id?: Prisma.StringWithAggregatesFilter<"Behaviour"> | string
  description?: Prisma.StringWithAggregatesFilter<"Behaviour"> | string
  datetime?: Prisma.DateTimeWithAggregatesFilter<"Behaviour"> | Date | string
  remark?: Prisma.EnumRemarkWithAggregatesFilter<"Behaviour"> | $Enums.Remark
  notes?: Prisma.StringNullableWithAggregatesFilter<"Behaviour"> | string | null
  created_at?: Prisma.DateTimeWithAggregatesFilter<"Behaviour"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"Behaviour"> | Date | string
  deleted_at?: Prisma.DateTimeNullableWithAggregatesFilter<"Behaviour"> | Date | string | null
}

export type BehaviourCreateInput = {
  id?: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  student: Prisma.StudentCreateNestedOneWithoutBehavioursInput
  class: Prisma.ClassCreateNestedOneWithoutBehavioursInput
  teacher: Prisma.TeacherCreateNestedOneWithoutBehaviourInput
}

export type BehaviourUncheckedCreateInput = {
  id?: string
  student_id: string
  class_id: string
  teacher_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  student?: Prisma.StudentUpdateOneRequiredWithoutBehavioursNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutBehavioursNestedInput
  teacher?: Prisma.TeacherUpdateOneRequiredWithoutBehaviourNestedInput
}

export type BehaviourUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  teacher_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourCreateManyInput = {
  id?: string
  student_id: string
  class_id: string
  teacher_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  teacher_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourListRelationFilter = {
  every?: Prisma.BehaviourWhereInput
  some?: Prisma.BehaviourWhereInput
  none?: Prisma.BehaviourWhereInput
}

export type BehaviourOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type BehaviourCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  teacher_id?: Prisma.SortOrder
  description?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type BehaviourMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  teacher_id?: Prisma.SortOrder
  description?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type BehaviourMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  teacher_id?: Prisma.SortOrder
  description?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type BehaviourCreateNestedManyWithoutTeacherInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutTeacherInput, Prisma.BehaviourUncheckedCreateWithoutTeacherInput> | Prisma.BehaviourCreateWithoutTeacherInput[] | Prisma.BehaviourUncheckedCreateWithoutTeacherInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutTeacherInput | Prisma.BehaviourCreateOrConnectWithoutTeacherInput[]
  createMany?: Prisma.BehaviourCreateManyTeacherInputEnvelope
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
}

export type BehaviourUncheckedCreateNestedManyWithoutTeacherInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutTeacherInput, Prisma.BehaviourUncheckedCreateWithoutTeacherInput> | Prisma.BehaviourCreateWithoutTeacherInput[] | Prisma.BehaviourUncheckedCreateWithoutTeacherInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutTeacherInput | Prisma.BehaviourCreateOrConnectWithoutTeacherInput[]
  createMany?: Prisma.BehaviourCreateManyTeacherInputEnvelope
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
}

export type BehaviourUpdateManyWithoutTeacherNestedInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutTeacherInput, Prisma.BehaviourUncheckedCreateWithoutTeacherInput> | Prisma.BehaviourCreateWithoutTeacherInput[] | Prisma.BehaviourUncheckedCreateWithoutTeacherInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutTeacherInput | Prisma.BehaviourCreateOrConnectWithoutTeacherInput[]
  upsert?: Prisma.BehaviourUpsertWithWhereUniqueWithoutTeacherInput | Prisma.BehaviourUpsertWithWhereUniqueWithoutTeacherInput[]
  createMany?: Prisma.BehaviourCreateManyTeacherInputEnvelope
  set?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  disconnect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  delete?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  update?: Prisma.BehaviourUpdateWithWhereUniqueWithoutTeacherInput | Prisma.BehaviourUpdateWithWhereUniqueWithoutTeacherInput[]
  updateMany?: Prisma.BehaviourUpdateManyWithWhereWithoutTeacherInput | Prisma.BehaviourUpdateManyWithWhereWithoutTeacherInput[]
  deleteMany?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
}

export type BehaviourUncheckedUpdateManyWithoutTeacherNestedInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutTeacherInput, Prisma.BehaviourUncheckedCreateWithoutTeacherInput> | Prisma.BehaviourCreateWithoutTeacherInput[] | Prisma.BehaviourUncheckedCreateWithoutTeacherInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutTeacherInput | Prisma.BehaviourCreateOrConnectWithoutTeacherInput[]
  upsert?: Prisma.BehaviourUpsertWithWhereUniqueWithoutTeacherInput | Prisma.BehaviourUpsertWithWhereUniqueWithoutTeacherInput[]
  createMany?: Prisma.BehaviourCreateManyTeacherInputEnvelope
  set?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  disconnect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  delete?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  update?: Prisma.BehaviourUpdateWithWhereUniqueWithoutTeacherInput | Prisma.BehaviourUpdateWithWhereUniqueWithoutTeacherInput[]
  updateMany?: Prisma.BehaviourUpdateManyWithWhereWithoutTeacherInput | Prisma.BehaviourUpdateManyWithWhereWithoutTeacherInput[]
  deleteMany?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
}

export type BehaviourCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutStudentInput, Prisma.BehaviourUncheckedCreateWithoutStudentInput> | Prisma.BehaviourCreateWithoutStudentInput[] | Prisma.BehaviourUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutStudentInput | Prisma.BehaviourCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.BehaviourCreateManyStudentInputEnvelope
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
}

export type BehaviourUncheckedCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutStudentInput, Prisma.BehaviourUncheckedCreateWithoutStudentInput> | Prisma.BehaviourCreateWithoutStudentInput[] | Prisma.BehaviourUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutStudentInput | Prisma.BehaviourCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.BehaviourCreateManyStudentInputEnvelope
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
}

export type BehaviourUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutStudentInput, Prisma.BehaviourUncheckedCreateWithoutStudentInput> | Prisma.BehaviourCreateWithoutStudentInput[] | Prisma.BehaviourUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutStudentInput | Prisma.BehaviourCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.BehaviourUpsertWithWhereUniqueWithoutStudentInput | Prisma.BehaviourUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.BehaviourCreateManyStudentInputEnvelope
  set?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  disconnect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  delete?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  update?: Prisma.BehaviourUpdateWithWhereUniqueWithoutStudentInput | Prisma.BehaviourUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.BehaviourUpdateManyWithWhereWithoutStudentInput | Prisma.BehaviourUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
}

export type BehaviourUncheckedUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutStudentInput, Prisma.BehaviourUncheckedCreateWithoutStudentInput> | Prisma.BehaviourCreateWithoutStudentInput[] | Prisma.BehaviourUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutStudentInput | Prisma.BehaviourCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.BehaviourUpsertWithWhereUniqueWithoutStudentInput | Prisma.BehaviourUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.BehaviourCreateManyStudentInputEnvelope
  set?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  disconnect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  delete?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  update?: Prisma.BehaviourUpdateWithWhereUniqueWithoutStudentInput | Prisma.BehaviourUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.BehaviourUpdateManyWithWhereWithoutStudentInput | Prisma.BehaviourUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
}

export type BehaviourCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutClassInput, Prisma.BehaviourUncheckedCreateWithoutClassInput> | Prisma.BehaviourCreateWithoutClassInput[] | Prisma.BehaviourUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutClassInput | Prisma.BehaviourCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.BehaviourCreateManyClassInputEnvelope
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
}

export type BehaviourUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutClassInput, Prisma.BehaviourUncheckedCreateWithoutClassInput> | Prisma.BehaviourCreateWithoutClassInput[] | Prisma.BehaviourUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutClassInput | Prisma.BehaviourCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.BehaviourCreateManyClassInputEnvelope
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
}

export type BehaviourUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutClassInput, Prisma.BehaviourUncheckedCreateWithoutClassInput> | Prisma.BehaviourCreateWithoutClassInput[] | Prisma.BehaviourUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutClassInput | Prisma.BehaviourCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.BehaviourUpsertWithWhereUniqueWithoutClassInput | Prisma.BehaviourUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.BehaviourCreateManyClassInputEnvelope
  set?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  disconnect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  delete?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  update?: Prisma.BehaviourUpdateWithWhereUniqueWithoutClassInput | Prisma.BehaviourUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.BehaviourUpdateManyWithWhereWithoutClassInput | Prisma.BehaviourUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
}

export type BehaviourUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.BehaviourCreateWithoutClassInput, Prisma.BehaviourUncheckedCreateWithoutClassInput> | Prisma.BehaviourCreateWithoutClassInput[] | Prisma.BehaviourUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.BehaviourCreateOrConnectWithoutClassInput | Prisma.BehaviourCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.BehaviourUpsertWithWhereUniqueWithoutClassInput | Prisma.BehaviourUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.BehaviourCreateManyClassInputEnvelope
  set?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  disconnect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  delete?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  connect?: Prisma.BehaviourWhereUniqueInput | Prisma.BehaviourWhereUniqueInput[]
  update?: Prisma.BehaviourUpdateWithWhereUniqueWithoutClassInput | Prisma.BehaviourUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.BehaviourUpdateManyWithWhereWithoutClassInput | Prisma.BehaviourUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
}

export type EnumRemarkFieldUpdateOperationsInput = {
  set?: $Enums.Remark
}

export type BehaviourCreateWithoutTeacherInput = {
  id?: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  student: Prisma.StudentCreateNestedOneWithoutBehavioursInput
  class: Prisma.ClassCreateNestedOneWithoutBehavioursInput
}

export type BehaviourUncheckedCreateWithoutTeacherInput = {
  id?: string
  student_id: string
  class_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourCreateOrConnectWithoutTeacherInput = {
  where: Prisma.BehaviourWhereUniqueInput
  create: Prisma.XOR<Prisma.BehaviourCreateWithoutTeacherInput, Prisma.BehaviourUncheckedCreateWithoutTeacherInput>
}

export type BehaviourCreateManyTeacherInputEnvelope = {
  data: Prisma.BehaviourCreateManyTeacherInput | Prisma.BehaviourCreateManyTeacherInput[]
  skipDuplicates?: boolean
}

export type BehaviourUpsertWithWhereUniqueWithoutTeacherInput = {
  where: Prisma.BehaviourWhereUniqueInput
  update: Prisma.XOR<Prisma.BehaviourUpdateWithoutTeacherInput, Prisma.BehaviourUncheckedUpdateWithoutTeacherInput>
  create: Prisma.XOR<Prisma.BehaviourCreateWithoutTeacherInput, Prisma.BehaviourUncheckedCreateWithoutTeacherInput>
}

export type BehaviourUpdateWithWhereUniqueWithoutTeacherInput = {
  where: Prisma.BehaviourWhereUniqueInput
  data: Prisma.XOR<Prisma.BehaviourUpdateWithoutTeacherInput, Prisma.BehaviourUncheckedUpdateWithoutTeacherInput>
}

export type BehaviourUpdateManyWithWhereWithoutTeacherInput = {
  where: Prisma.BehaviourScalarWhereInput
  data: Prisma.XOR<Prisma.BehaviourUpdateManyMutationInput, Prisma.BehaviourUncheckedUpdateManyWithoutTeacherInput>
}

export type BehaviourScalarWhereInput = {
  AND?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
  OR?: Prisma.BehaviourScalarWhereInput[]
  NOT?: Prisma.BehaviourScalarWhereInput | Prisma.BehaviourScalarWhereInput[]
  id?: Prisma.StringFilter<"Behaviour"> | string
  student_id?: Prisma.StringFilter<"Behaviour"> | string
  class_id?: Prisma.StringFilter<"Behaviour"> | string
  teacher_id?: Prisma.StringFilter<"Behaviour"> | string
  description?: Prisma.StringFilter<"Behaviour"> | string
  datetime?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  remark?: Prisma.EnumRemarkFilter<"Behaviour"> | $Enums.Remark
  notes?: Prisma.StringNullableFilter<"Behaviour"> | string | null
  created_at?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Behaviour"> | Date | string
  deleted_at?: Prisma.DateTimeNullableFilter<"Behaviour"> | Date | string | null
}

export type BehaviourCreateWithoutStudentInput = {
  id?: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  class: Prisma.ClassCreateNestedOneWithoutBehavioursInput
  teacher: Prisma.TeacherCreateNestedOneWithoutBehaviourInput
}

export type BehaviourUncheckedCreateWithoutStudentInput = {
  id?: string
  class_id: string
  teacher_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourCreateOrConnectWithoutStudentInput = {
  where: Prisma.BehaviourWhereUniqueInput
  create: Prisma.XOR<Prisma.BehaviourCreateWithoutStudentInput, Prisma.BehaviourUncheckedCreateWithoutStudentInput>
}

export type BehaviourCreateManyStudentInputEnvelope = {
  data: Prisma.BehaviourCreateManyStudentInput | Prisma.BehaviourCreateManyStudentInput[]
  skipDuplicates?: boolean
}

export type BehaviourUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.BehaviourWhereUniqueInput
  update: Prisma.XOR<Prisma.BehaviourUpdateWithoutStudentInput, Prisma.BehaviourUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.BehaviourCreateWithoutStudentInput, Prisma.BehaviourUncheckedCreateWithoutStudentInput>
}

export type BehaviourUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.BehaviourWhereUniqueInput
  data: Prisma.XOR<Prisma.BehaviourUpdateWithoutStudentInput, Prisma.BehaviourUncheckedUpdateWithoutStudentInput>
}

export type BehaviourUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.BehaviourScalarWhereInput
  data: Prisma.XOR<Prisma.BehaviourUpdateManyMutationInput, Prisma.BehaviourUncheckedUpdateManyWithoutStudentInput>
}

export type BehaviourCreateWithoutClassInput = {
  id?: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  student: Prisma.StudentCreateNestedOneWithoutBehavioursInput
  teacher: Prisma.TeacherCreateNestedOneWithoutBehaviourInput
}

export type BehaviourUncheckedCreateWithoutClassInput = {
  id?: string
  student_id: string
  teacher_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourCreateOrConnectWithoutClassInput = {
  where: Prisma.BehaviourWhereUniqueInput
  create: Prisma.XOR<Prisma.BehaviourCreateWithoutClassInput, Prisma.BehaviourUncheckedCreateWithoutClassInput>
}

export type BehaviourCreateManyClassInputEnvelope = {
  data: Prisma.BehaviourCreateManyClassInput | Prisma.BehaviourCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type BehaviourUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.BehaviourWhereUniqueInput
  update: Prisma.XOR<Prisma.BehaviourUpdateWithoutClassInput, Prisma.BehaviourUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.BehaviourCreateWithoutClassInput, Prisma.BehaviourUncheckedCreateWithoutClassInput>
}

export type BehaviourUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.BehaviourWhereUniqueInput
  data: Prisma.XOR<Prisma.BehaviourUpdateWithoutClassInput, Prisma.BehaviourUncheckedUpdateWithoutClassInput>
}

export type BehaviourUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.BehaviourScalarWhereInput
  data: Prisma.XOR<Prisma.BehaviourUpdateManyMutationInput, Prisma.BehaviourUncheckedUpdateManyWithoutClassInput>
}

export type BehaviourCreateManyTeacherInput = {
  id?: string
  student_id: string
  class_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourUpdateWithoutTeacherInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  student?: Prisma.StudentUpdateOneRequiredWithoutBehavioursNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutBehavioursNestedInput
}

export type BehaviourUncheckedUpdateWithoutTeacherInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourUncheckedUpdateManyWithoutTeacherInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourCreateManyStudentInput = {
  id?: string
  class_id: string
  teacher_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  class?: Prisma.ClassUpdateOneRequiredWithoutBehavioursNestedInput
  teacher?: Prisma.TeacherUpdateOneRequiredWithoutBehaviourNestedInput
}

export type BehaviourUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  teacher_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  teacher_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourCreateManyClassInput = {
  id?: string
  student_id: string
  teacher_id: string
  description: string
  datetime?: Date | string
  remark: $Enums.Remark
  notes?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type BehaviourUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  student?: Prisma.StudentUpdateOneRequiredWithoutBehavioursNestedInput
  teacher?: Prisma.TeacherUpdateOneRequiredWithoutBehaviourNestedInput
}

export type BehaviourUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  teacher_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type BehaviourUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  teacher_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  remark?: Prisma.EnumRemarkFieldUpdateOperationsInput | $Enums.Remark
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type BehaviourSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  teacher_id?: boolean
  description?: boolean
  datetime?: boolean
  remark?: boolean
  notes?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  teacher?: boolean | Prisma.TeacherDefaultArgs<ExtArgs>
}, ExtArgs["result"]["behaviour"]>

export type BehaviourSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  teacher_id?: boolean
  description?: boolean
  datetime?: boolean
  remark?: boolean
  notes?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  teacher?: boolean | Prisma.TeacherDefaultArgs<ExtArgs>
}, ExtArgs["result"]["behaviour"]>

export type BehaviourSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  teacher_id?: boolean
  description?: boolean
  datetime?: boolean
  remark?: boolean
  notes?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  teacher?: boolean | Prisma.TeacherDefaultArgs<ExtArgs>
}, ExtArgs["result"]["behaviour"]>

export type BehaviourSelectScalar = {
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  teacher_id?: boolean
  description?: boolean
  datetime?: boolean
  remark?: boolean
  notes?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
}

export type BehaviourOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "student_id" | "class_id" | "teacher_id" | "description" | "datetime" | "remark" | "notes" | "created_at" | "updated_at" | "deleted_at", ExtArgs["result"]["behaviour"]>
export type BehaviourInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  teacher?: boolean | Prisma.TeacherDefaultArgs<ExtArgs>
}
export type BehaviourIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  teacher?: boolean | Prisma.TeacherDefaultArgs<ExtArgs>
}
export type BehaviourIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  teacher?: boolean | Prisma.TeacherDefaultArgs<ExtArgs>
}

export type $BehaviourPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Behaviour"
  objects: {
    student: Prisma.$StudentPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs>
    teacher: Prisma.$TeacherPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    student_id: string
    class_id: string
    teacher_id: string
    description: string
    datetime: Date
    remark: $Enums.Remark
    notes: string | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
  }, ExtArgs["result"]["behaviour"]>
  composites: {}
}

export type BehaviourGetPayload<S extends boolean | null | undefined | BehaviourDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BehaviourPayload, S>

export type BehaviourCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<BehaviourFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: BehaviourCountAggregateInputType | true
  }

export interface BehaviourDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Behaviour'], meta: { name: 'Behaviour' } }
  /**
   * Find zero or one Behaviour that matches the filter.
   * @param {BehaviourFindUniqueArgs} args - Arguments to find a Behaviour
   * @example
   * // Get one Behaviour
   * const behaviour = await prisma.behaviour.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends BehaviourFindUniqueArgs>(args: Prisma.SelectSubset<T, BehaviourFindUniqueArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Behaviour that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {BehaviourFindUniqueOrThrowArgs} args - Arguments to find a Behaviour
   * @example
   * // Get one Behaviour
   * const behaviour = await prisma.behaviour.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends BehaviourFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, BehaviourFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Behaviour that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourFindFirstArgs} args - Arguments to find a Behaviour
   * @example
   * // Get one Behaviour
   * const behaviour = await prisma.behaviour.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends BehaviourFindFirstArgs>(args?: Prisma.SelectSubset<T, BehaviourFindFirstArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Behaviour that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourFindFirstOrThrowArgs} args - Arguments to find a Behaviour
   * @example
   * // Get one Behaviour
   * const behaviour = await prisma.behaviour.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends BehaviourFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, BehaviourFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Behaviours that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Behaviours
   * const behaviours = await prisma.behaviour.findMany()
   * 
   * // Get first 10 Behaviours
   * const behaviours = await prisma.behaviour.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const behaviourWithIdOnly = await prisma.behaviour.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends BehaviourFindManyArgs>(args?: Prisma.SelectSubset<T, BehaviourFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Behaviour.
   * @param {BehaviourCreateArgs} args - Arguments to create a Behaviour.
   * @example
   * // Create one Behaviour
   * const Behaviour = await prisma.behaviour.create({
   *   data: {
   *     // ... data to create a Behaviour
   *   }
   * })
   * 
   */
  create<T extends BehaviourCreateArgs>(args: Prisma.SelectSubset<T, BehaviourCreateArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Behaviours.
   * @param {BehaviourCreateManyArgs} args - Arguments to create many Behaviours.
   * @example
   * // Create many Behaviours
   * const behaviour = await prisma.behaviour.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends BehaviourCreateManyArgs>(args?: Prisma.SelectSubset<T, BehaviourCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Behaviours and returns the data saved in the database.
   * @param {BehaviourCreateManyAndReturnArgs} args - Arguments to create many Behaviours.
   * @example
   * // Create many Behaviours
   * const behaviour = await prisma.behaviour.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Behaviours and only return the `id`
   * const behaviourWithIdOnly = await prisma.behaviour.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends BehaviourCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, BehaviourCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Behaviour.
   * @param {BehaviourDeleteArgs} args - Arguments to delete one Behaviour.
   * @example
   * // Delete one Behaviour
   * const Behaviour = await prisma.behaviour.delete({
   *   where: {
   *     // ... filter to delete one Behaviour
   *   }
   * })
   * 
   */
  delete<T extends BehaviourDeleteArgs>(args: Prisma.SelectSubset<T, BehaviourDeleteArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Behaviour.
   * @param {BehaviourUpdateArgs} args - Arguments to update one Behaviour.
   * @example
   * // Update one Behaviour
   * const behaviour = await prisma.behaviour.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends BehaviourUpdateArgs>(args: Prisma.SelectSubset<T, BehaviourUpdateArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Behaviours.
   * @param {BehaviourDeleteManyArgs} args - Arguments to filter Behaviours to delete.
   * @example
   * // Delete a few Behaviours
   * const { count } = await prisma.behaviour.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends BehaviourDeleteManyArgs>(args?: Prisma.SelectSubset<T, BehaviourDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Behaviours.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Behaviours
   * const behaviour = await prisma.behaviour.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends BehaviourUpdateManyArgs>(args: Prisma.SelectSubset<T, BehaviourUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Behaviours and returns the data updated in the database.
   * @param {BehaviourUpdateManyAndReturnArgs} args - Arguments to update many Behaviours.
   * @example
   * // Update many Behaviours
   * const behaviour = await prisma.behaviour.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Behaviours and only return the `id`
   * const behaviourWithIdOnly = await prisma.behaviour.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends BehaviourUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, BehaviourUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Behaviour.
   * @param {BehaviourUpsertArgs} args - Arguments to update or create a Behaviour.
   * @example
   * // Update or create a Behaviour
   * const behaviour = await prisma.behaviour.upsert({
   *   create: {
   *     // ... data to create a Behaviour
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Behaviour we want to update
   *   }
   * })
   */
  upsert<T extends BehaviourUpsertArgs>(args: Prisma.SelectSubset<T, BehaviourUpsertArgs<ExtArgs>>): Prisma.Prisma__BehaviourClient<runtime.Types.Result.GetResult<Prisma.$BehaviourPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Behaviours.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourCountArgs} args - Arguments to filter Behaviours to count.
   * @example
   * // Count the number of Behaviours
   * const count = await prisma.behaviour.count({
   *   where: {
   *     // ... the filter for the Behaviours we want to count
   *   }
   * })
  **/
  count<T extends BehaviourCountArgs>(
    args?: Prisma.Subset<T, BehaviourCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], BehaviourCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Behaviour.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends BehaviourAggregateArgs>(args: Prisma.Subset<T, BehaviourAggregateArgs>): Prisma.PrismaPromise<GetBehaviourAggregateType<T>>

  /**
   * Group by Behaviour.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BehaviourGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends BehaviourGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: BehaviourGroupByArgs['orderBy'] }
      : { orderBy?: BehaviourGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, BehaviourGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBehaviourGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Behaviour model
 */
readonly fields: BehaviourFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Behaviour.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__BehaviourClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.ClassDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClassDefaultArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  teacher<T extends Prisma.TeacherDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TeacherDefaultArgs<ExtArgs>>): Prisma.Prisma__TeacherClient<runtime.Types.Result.GetResult<Prisma.$TeacherPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Behaviour model
 */
export interface BehaviourFieldRefs {
  readonly id: Prisma.FieldRef<"Behaviour", 'String'>
  readonly student_id: Prisma.FieldRef<"Behaviour", 'String'>
  readonly class_id: Prisma.FieldRef<"Behaviour", 'String'>
  readonly teacher_id: Prisma.FieldRef<"Behaviour", 'String'>
  readonly description: Prisma.FieldRef<"Behaviour", 'String'>
  readonly datetime: Prisma.FieldRef<"Behaviour", 'DateTime'>
  readonly remark: Prisma.FieldRef<"Behaviour", 'Remark'>
  readonly notes: Prisma.FieldRef<"Behaviour", 'String'>
  readonly created_at: Prisma.FieldRef<"Behaviour", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"Behaviour", 'DateTime'>
  readonly deleted_at: Prisma.FieldRef<"Behaviour", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Behaviour findUnique
 */
export type BehaviourFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * Filter, which Behaviour to fetch.
   */
  where: Prisma.BehaviourWhereUniqueInput
}

/**
 * Behaviour findUniqueOrThrow
 */
export type BehaviourFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * Filter, which Behaviour to fetch.
   */
  where: Prisma.BehaviourWhereUniqueInput
}

/**
 * Behaviour findFirst
 */
export type BehaviourFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * Filter, which Behaviour to fetch.
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Behaviours to fetch.
   */
  orderBy?: Prisma.BehaviourOrderByWithRelationInput | Prisma.BehaviourOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Behaviours.
   */
  cursor?: Prisma.BehaviourWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Behaviours from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Behaviours.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Behaviours.
   */
  distinct?: Prisma.BehaviourScalarFieldEnum | Prisma.BehaviourScalarFieldEnum[]
}

/**
 * Behaviour findFirstOrThrow
 */
export type BehaviourFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * Filter, which Behaviour to fetch.
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Behaviours to fetch.
   */
  orderBy?: Prisma.BehaviourOrderByWithRelationInput | Prisma.BehaviourOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Behaviours.
   */
  cursor?: Prisma.BehaviourWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Behaviours from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Behaviours.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Behaviours.
   */
  distinct?: Prisma.BehaviourScalarFieldEnum | Prisma.BehaviourScalarFieldEnum[]
}

/**
 * Behaviour findMany
 */
export type BehaviourFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * Filter, which Behaviours to fetch.
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Behaviours to fetch.
   */
  orderBy?: Prisma.BehaviourOrderByWithRelationInput | Prisma.BehaviourOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Behaviours.
   */
  cursor?: Prisma.BehaviourWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Behaviours from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Behaviours.
   */
  skip?: number
  distinct?: Prisma.BehaviourScalarFieldEnum | Prisma.BehaviourScalarFieldEnum[]
}

/**
 * Behaviour create
 */
export type BehaviourCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * The data needed to create a Behaviour.
   */
  data: Prisma.XOR<Prisma.BehaviourCreateInput, Prisma.BehaviourUncheckedCreateInput>
}

/**
 * Behaviour createMany
 */
export type BehaviourCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Behaviours.
   */
  data: Prisma.BehaviourCreateManyInput | Prisma.BehaviourCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Behaviour createManyAndReturn
 */
export type BehaviourCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * The data used to create many Behaviours.
   */
  data: Prisma.BehaviourCreateManyInput | Prisma.BehaviourCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Behaviour update
 */
export type BehaviourUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * The data needed to update a Behaviour.
   */
  data: Prisma.XOR<Prisma.BehaviourUpdateInput, Prisma.BehaviourUncheckedUpdateInput>
  /**
   * Choose, which Behaviour to update.
   */
  where: Prisma.BehaviourWhereUniqueInput
}

/**
 * Behaviour updateMany
 */
export type BehaviourUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Behaviours.
   */
  data: Prisma.XOR<Prisma.BehaviourUpdateManyMutationInput, Prisma.BehaviourUncheckedUpdateManyInput>
  /**
   * Filter which Behaviours to update
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * Limit how many Behaviours to update.
   */
  limit?: number
}

/**
 * Behaviour updateManyAndReturn
 */
export type BehaviourUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * The data used to update Behaviours.
   */
  data: Prisma.XOR<Prisma.BehaviourUpdateManyMutationInput, Prisma.BehaviourUncheckedUpdateManyInput>
  /**
   * Filter which Behaviours to update
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * Limit how many Behaviours to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Behaviour upsert
 */
export type BehaviourUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * The filter to search for the Behaviour to update in case it exists.
   */
  where: Prisma.BehaviourWhereUniqueInput
  /**
   * In case the Behaviour found by the `where` argument doesn't exist, create a new Behaviour with this data.
   */
  create: Prisma.XOR<Prisma.BehaviourCreateInput, Prisma.BehaviourUncheckedCreateInput>
  /**
   * In case the Behaviour was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.BehaviourUpdateInput, Prisma.BehaviourUncheckedUpdateInput>
}

/**
 * Behaviour delete
 */
export type BehaviourDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
  /**
   * Filter which Behaviour to delete.
   */
  where: Prisma.BehaviourWhereUniqueInput
}

/**
 * Behaviour deleteMany
 */
export type BehaviourDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Behaviours to delete
   */
  where?: Prisma.BehaviourWhereInput
  /**
   * Limit how many Behaviours to delete.
   */
  limit?: number
}

/**
 * Behaviour without action
 */
export type BehaviourDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Behaviour
   */
  select?: Prisma.BehaviourSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Behaviour
   */
  omit?: Prisma.BehaviourOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BehaviourInclude<ExtArgs> | null
}
