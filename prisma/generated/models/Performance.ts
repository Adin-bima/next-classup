
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Performance` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Performance
 * 
 */
export type PerformanceModel = runtime.Types.Result.DefaultSelection<Prisma.$PerformancePayload>

export type AggregatePerformance = {
  _count: PerformanceCountAggregateOutputType | null
  _avg: PerformanceAvgAggregateOutputType | null
  _sum: PerformanceSumAggregateOutputType | null
  _min: PerformanceMinAggregateOutputType | null
  _max: PerformanceMaxAggregateOutputType | null
}

export type PerformanceAvgAggregateOutputType = {
  score: number | null
}

export type PerformanceSumAggregateOutputType = {
  score: number | null
}

export type PerformanceMinAggregateOutputType = {
  id: string | null
  student_id: string | null
  class_id: string | null
  subject_id: string | null
  score: number | null
  datetime: Date | null
  created_at: Date | null
  updated_at: Date | null
  deleted_at: Date | null
}

export type PerformanceMaxAggregateOutputType = {
  id: string | null
  student_id: string | null
  class_id: string | null
  subject_id: string | null
  score: number | null
  datetime: Date | null
  created_at: Date | null
  updated_at: Date | null
  deleted_at: Date | null
}

export type PerformanceCountAggregateOutputType = {
  id: number
  student_id: number
  class_id: number
  subject_id: number
  score: number
  datetime: number
  created_at: number
  updated_at: number
  deleted_at: number
  _all: number
}


export type PerformanceAvgAggregateInputType = {
  score?: true
}

export type PerformanceSumAggregateInputType = {
  score?: true
}

export type PerformanceMinAggregateInputType = {
  id?: true
  student_id?: true
  class_id?: true
  subject_id?: true
  score?: true
  datetime?: true
  created_at?: true
  updated_at?: true
  deleted_at?: true
}

export type PerformanceMaxAggregateInputType = {
  id?: true
  student_id?: true
  class_id?: true
  subject_id?: true
  score?: true
  datetime?: true
  created_at?: true
  updated_at?: true
  deleted_at?: true
}

export type PerformanceCountAggregateInputType = {
  id?: true
  student_id?: true
  class_id?: true
  subject_id?: true
  score?: true
  datetime?: true
  created_at?: true
  updated_at?: true
  deleted_at?: true
  _all?: true
}

export type PerformanceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Performance to aggregate.
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Performances to fetch.
   */
  orderBy?: Prisma.PerformanceOrderByWithRelationInput | Prisma.PerformanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PerformanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Performances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Performances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Performances
  **/
  _count?: true | PerformanceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PerformanceAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PerformanceSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PerformanceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PerformanceMaxAggregateInputType
}

export type GetPerformanceAggregateType<T extends PerformanceAggregateArgs> = {
      [P in keyof T & keyof AggregatePerformance]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePerformance[P]>
    : Prisma.GetScalarType<T[P], AggregatePerformance[P]>
}




export type PerformanceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PerformanceWhereInput
  orderBy?: Prisma.PerformanceOrderByWithAggregationInput | Prisma.PerformanceOrderByWithAggregationInput[]
  by: Prisma.PerformanceScalarFieldEnum[] | Prisma.PerformanceScalarFieldEnum
  having?: Prisma.PerformanceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PerformanceCountAggregateInputType | true
  _avg?: PerformanceAvgAggregateInputType
  _sum?: PerformanceSumAggregateInputType
  _min?: PerformanceMinAggregateInputType
  _max?: PerformanceMaxAggregateInputType
}

export type PerformanceGroupByOutputType = {
  id: string
  student_id: string
  class_id: string
  subject_id: string
  score: number
  datetime: Date
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  _count: PerformanceCountAggregateOutputType | null
  _avg: PerformanceAvgAggregateOutputType | null
  _sum: PerformanceSumAggregateOutputType | null
  _min: PerformanceMinAggregateOutputType | null
  _max: PerformanceMaxAggregateOutputType | null
}

type GetPerformanceGroupByPayload<T extends PerformanceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PerformanceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PerformanceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PerformanceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PerformanceGroupByOutputType[P]>
      }
    >
  >



export type PerformanceWhereInput = {
  AND?: Prisma.PerformanceWhereInput | Prisma.PerformanceWhereInput[]
  OR?: Prisma.PerformanceWhereInput[]
  NOT?: Prisma.PerformanceWhereInput | Prisma.PerformanceWhereInput[]
  id?: Prisma.StringFilter<"Performance"> | string
  student_id?: Prisma.StringFilter<"Performance"> | string
  class_id?: Prisma.StringFilter<"Performance"> | string
  subject_id?: Prisma.StringFilter<"Performance"> | string
  score?: Prisma.FloatFilter<"Performance"> | number
  datetime?: Prisma.DateTimeFilter<"Performance"> | Date | string
  created_at?: Prisma.DateTimeFilter<"Performance"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Performance"> | Date | string
  deleted_at?: Prisma.DateTimeNullableFilter<"Performance"> | Date | string | null
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
  subject?: Prisma.XOR<Prisma.SubjectScalarRelationFilter, Prisma.SubjectWhereInput>
}

export type PerformanceOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  subject_id?: Prisma.SortOrder
  score?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  student?: Prisma.StudentOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
  subject?: Prisma.SubjectOrderByWithRelationInput
}

export type PerformanceWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PerformanceWhereInput | Prisma.PerformanceWhereInput[]
  OR?: Prisma.PerformanceWhereInput[]
  NOT?: Prisma.PerformanceWhereInput | Prisma.PerformanceWhereInput[]
  student_id?: Prisma.StringFilter<"Performance"> | string
  class_id?: Prisma.StringFilter<"Performance"> | string
  subject_id?: Prisma.StringFilter<"Performance"> | string
  score?: Prisma.FloatFilter<"Performance"> | number
  datetime?: Prisma.DateTimeFilter<"Performance"> | Date | string
  created_at?: Prisma.DateTimeFilter<"Performance"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Performance"> | Date | string
  deleted_at?: Prisma.DateTimeNullableFilter<"Performance"> | Date | string | null
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
  subject?: Prisma.XOR<Prisma.SubjectScalarRelationFilter, Prisma.SubjectWhereInput>
}, "id" | "id">

export type PerformanceOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  subject_id?: Prisma.SortOrder
  score?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.PerformanceCountOrderByAggregateInput
  _avg?: Prisma.PerformanceAvgOrderByAggregateInput
  _max?: Prisma.PerformanceMaxOrderByAggregateInput
  _min?: Prisma.PerformanceMinOrderByAggregateInput
  _sum?: Prisma.PerformanceSumOrderByAggregateInput
}

export type PerformanceScalarWhereWithAggregatesInput = {
  AND?: Prisma.PerformanceScalarWhereWithAggregatesInput | Prisma.PerformanceScalarWhereWithAggregatesInput[]
  OR?: Prisma.PerformanceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PerformanceScalarWhereWithAggregatesInput | Prisma.PerformanceScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Performance"> | string
  student_id?: Prisma.StringWithAggregatesFilter<"Performance"> | string
  class_id?: Prisma.StringWithAggregatesFilter<"Performance"> | string
  subject_id?: Prisma.StringWithAggregatesFilter<"Performance"> | string
  score?: Prisma.FloatWithAggregatesFilter<"Performance"> | number
  datetime?: Prisma.DateTimeWithAggregatesFilter<"Performance"> | Date | string
  created_at?: Prisma.DateTimeWithAggregatesFilter<"Performance"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"Performance"> | Date | string
  deleted_at?: Prisma.DateTimeNullableWithAggregatesFilter<"Performance"> | Date | string | null
}

export type PerformanceCreateInput = {
  id?: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  student: Prisma.StudentCreateNestedOneWithoutPerformancesInput
  class: Prisma.ClassCreateNestedOneWithoutPerformanceInput
  subject: Prisma.SubjectCreateNestedOneWithoutPerformanceInput
}

export type PerformanceUncheckedCreateInput = {
  id?: string
  student_id: string
  class_id: string
  subject_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  student?: Prisma.StudentUpdateOneRequiredWithoutPerformancesNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutPerformanceNestedInput
  subject?: Prisma.SubjectUpdateOneRequiredWithoutPerformanceNestedInput
}

export type PerformanceUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  subject_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceCreateManyInput = {
  id?: string
  student_id: string
  class_id: string
  subject_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  subject_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceListRelationFilter = {
  every?: Prisma.PerformanceWhereInput
  some?: Prisma.PerformanceWhereInput
  none?: Prisma.PerformanceWhereInput
}

export type PerformanceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PerformanceCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  subject_id?: Prisma.SortOrder
  score?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type PerformanceAvgOrderByAggregateInput = {
  score?: Prisma.SortOrder
}

export type PerformanceMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  subject_id?: Prisma.SortOrder
  score?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type PerformanceMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  student_id?: Prisma.SortOrder
  class_id?: Prisma.SortOrder
  subject_id?: Prisma.SortOrder
  score?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type PerformanceSumOrderByAggregateInput = {
  score?: Prisma.SortOrder
}

export type PerformanceCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutStudentInput, Prisma.PerformanceUncheckedCreateWithoutStudentInput> | Prisma.PerformanceCreateWithoutStudentInput[] | Prisma.PerformanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutStudentInput | Prisma.PerformanceCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.PerformanceCreateManyStudentInputEnvelope
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
}

export type PerformanceUncheckedCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutStudentInput, Prisma.PerformanceUncheckedCreateWithoutStudentInput> | Prisma.PerformanceCreateWithoutStudentInput[] | Prisma.PerformanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutStudentInput | Prisma.PerformanceCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.PerformanceCreateManyStudentInputEnvelope
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
}

export type PerformanceUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutStudentInput, Prisma.PerformanceUncheckedCreateWithoutStudentInput> | Prisma.PerformanceCreateWithoutStudentInput[] | Prisma.PerformanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutStudentInput | Prisma.PerformanceCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.PerformanceUpsertWithWhereUniqueWithoutStudentInput | Prisma.PerformanceUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.PerformanceCreateManyStudentInputEnvelope
  set?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  disconnect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  delete?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  update?: Prisma.PerformanceUpdateWithWhereUniqueWithoutStudentInput | Prisma.PerformanceUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.PerformanceUpdateManyWithWhereWithoutStudentInput | Prisma.PerformanceUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
}

export type PerformanceUncheckedUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutStudentInput, Prisma.PerformanceUncheckedCreateWithoutStudentInput> | Prisma.PerformanceCreateWithoutStudentInput[] | Prisma.PerformanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutStudentInput | Prisma.PerformanceCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.PerformanceUpsertWithWhereUniqueWithoutStudentInput | Prisma.PerformanceUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.PerformanceCreateManyStudentInputEnvelope
  set?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  disconnect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  delete?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  update?: Prisma.PerformanceUpdateWithWhereUniqueWithoutStudentInput | Prisma.PerformanceUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.PerformanceUpdateManyWithWhereWithoutStudentInput | Prisma.PerformanceUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
}

export type PerformanceCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutClassInput, Prisma.PerformanceUncheckedCreateWithoutClassInput> | Prisma.PerformanceCreateWithoutClassInput[] | Prisma.PerformanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutClassInput | Prisma.PerformanceCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.PerformanceCreateManyClassInputEnvelope
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
}

export type PerformanceUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutClassInput, Prisma.PerformanceUncheckedCreateWithoutClassInput> | Prisma.PerformanceCreateWithoutClassInput[] | Prisma.PerformanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutClassInput | Prisma.PerformanceCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.PerformanceCreateManyClassInputEnvelope
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
}

export type PerformanceUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutClassInput, Prisma.PerformanceUncheckedCreateWithoutClassInput> | Prisma.PerformanceCreateWithoutClassInput[] | Prisma.PerformanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutClassInput | Prisma.PerformanceCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.PerformanceUpsertWithWhereUniqueWithoutClassInput | Prisma.PerformanceUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.PerformanceCreateManyClassInputEnvelope
  set?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  disconnect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  delete?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  update?: Prisma.PerformanceUpdateWithWhereUniqueWithoutClassInput | Prisma.PerformanceUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.PerformanceUpdateManyWithWhereWithoutClassInput | Prisma.PerformanceUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
}

export type PerformanceUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutClassInput, Prisma.PerformanceUncheckedCreateWithoutClassInput> | Prisma.PerformanceCreateWithoutClassInput[] | Prisma.PerformanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutClassInput | Prisma.PerformanceCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.PerformanceUpsertWithWhereUniqueWithoutClassInput | Prisma.PerformanceUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.PerformanceCreateManyClassInputEnvelope
  set?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  disconnect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  delete?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  update?: Prisma.PerformanceUpdateWithWhereUniqueWithoutClassInput | Prisma.PerformanceUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.PerformanceUpdateManyWithWhereWithoutClassInput | Prisma.PerformanceUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
}

export type PerformanceCreateNestedManyWithoutSubjectInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutSubjectInput, Prisma.PerformanceUncheckedCreateWithoutSubjectInput> | Prisma.PerformanceCreateWithoutSubjectInput[] | Prisma.PerformanceUncheckedCreateWithoutSubjectInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutSubjectInput | Prisma.PerformanceCreateOrConnectWithoutSubjectInput[]
  createMany?: Prisma.PerformanceCreateManySubjectInputEnvelope
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
}

export type PerformanceUncheckedCreateNestedManyWithoutSubjectInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutSubjectInput, Prisma.PerformanceUncheckedCreateWithoutSubjectInput> | Prisma.PerformanceCreateWithoutSubjectInput[] | Prisma.PerformanceUncheckedCreateWithoutSubjectInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutSubjectInput | Prisma.PerformanceCreateOrConnectWithoutSubjectInput[]
  createMany?: Prisma.PerformanceCreateManySubjectInputEnvelope
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
}

export type PerformanceUpdateManyWithoutSubjectNestedInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutSubjectInput, Prisma.PerformanceUncheckedCreateWithoutSubjectInput> | Prisma.PerformanceCreateWithoutSubjectInput[] | Prisma.PerformanceUncheckedCreateWithoutSubjectInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutSubjectInput | Prisma.PerformanceCreateOrConnectWithoutSubjectInput[]
  upsert?: Prisma.PerformanceUpsertWithWhereUniqueWithoutSubjectInput | Prisma.PerformanceUpsertWithWhereUniqueWithoutSubjectInput[]
  createMany?: Prisma.PerformanceCreateManySubjectInputEnvelope
  set?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  disconnect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  delete?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  update?: Prisma.PerformanceUpdateWithWhereUniqueWithoutSubjectInput | Prisma.PerformanceUpdateWithWhereUniqueWithoutSubjectInput[]
  updateMany?: Prisma.PerformanceUpdateManyWithWhereWithoutSubjectInput | Prisma.PerformanceUpdateManyWithWhereWithoutSubjectInput[]
  deleteMany?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
}

export type PerformanceUncheckedUpdateManyWithoutSubjectNestedInput = {
  create?: Prisma.XOR<Prisma.PerformanceCreateWithoutSubjectInput, Prisma.PerformanceUncheckedCreateWithoutSubjectInput> | Prisma.PerformanceCreateWithoutSubjectInput[] | Prisma.PerformanceUncheckedCreateWithoutSubjectInput[]
  connectOrCreate?: Prisma.PerformanceCreateOrConnectWithoutSubjectInput | Prisma.PerformanceCreateOrConnectWithoutSubjectInput[]
  upsert?: Prisma.PerformanceUpsertWithWhereUniqueWithoutSubjectInput | Prisma.PerformanceUpsertWithWhereUniqueWithoutSubjectInput[]
  createMany?: Prisma.PerformanceCreateManySubjectInputEnvelope
  set?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  disconnect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  delete?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  connect?: Prisma.PerformanceWhereUniqueInput | Prisma.PerformanceWhereUniqueInput[]
  update?: Prisma.PerformanceUpdateWithWhereUniqueWithoutSubjectInput | Prisma.PerformanceUpdateWithWhereUniqueWithoutSubjectInput[]
  updateMany?: Prisma.PerformanceUpdateManyWithWhereWithoutSubjectInput | Prisma.PerformanceUpdateManyWithWhereWithoutSubjectInput[]
  deleteMany?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
}

export type FloatFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type PerformanceCreateWithoutStudentInput = {
  id?: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  class: Prisma.ClassCreateNestedOneWithoutPerformanceInput
  subject: Prisma.SubjectCreateNestedOneWithoutPerformanceInput
}

export type PerformanceUncheckedCreateWithoutStudentInput = {
  id?: string
  class_id: string
  subject_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceCreateOrConnectWithoutStudentInput = {
  where: Prisma.PerformanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PerformanceCreateWithoutStudentInput, Prisma.PerformanceUncheckedCreateWithoutStudentInput>
}

export type PerformanceCreateManyStudentInputEnvelope = {
  data: Prisma.PerformanceCreateManyStudentInput | Prisma.PerformanceCreateManyStudentInput[]
  skipDuplicates?: boolean
}

export type PerformanceUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.PerformanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PerformanceUpdateWithoutStudentInput, Prisma.PerformanceUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.PerformanceCreateWithoutStudentInput, Prisma.PerformanceUncheckedCreateWithoutStudentInput>
}

export type PerformanceUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.PerformanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PerformanceUpdateWithoutStudentInput, Prisma.PerformanceUncheckedUpdateWithoutStudentInput>
}

export type PerformanceUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.PerformanceScalarWhereInput
  data: Prisma.XOR<Prisma.PerformanceUpdateManyMutationInput, Prisma.PerformanceUncheckedUpdateManyWithoutStudentInput>
}

export type PerformanceScalarWhereInput = {
  AND?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
  OR?: Prisma.PerformanceScalarWhereInput[]
  NOT?: Prisma.PerformanceScalarWhereInput | Prisma.PerformanceScalarWhereInput[]
  id?: Prisma.StringFilter<"Performance"> | string
  student_id?: Prisma.StringFilter<"Performance"> | string
  class_id?: Prisma.StringFilter<"Performance"> | string
  subject_id?: Prisma.StringFilter<"Performance"> | string
  score?: Prisma.FloatFilter<"Performance"> | number
  datetime?: Prisma.DateTimeFilter<"Performance"> | Date | string
  created_at?: Prisma.DateTimeFilter<"Performance"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Performance"> | Date | string
  deleted_at?: Prisma.DateTimeNullableFilter<"Performance"> | Date | string | null
}

export type PerformanceCreateWithoutClassInput = {
  id?: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  student: Prisma.StudentCreateNestedOneWithoutPerformancesInput
  subject: Prisma.SubjectCreateNestedOneWithoutPerformanceInput
}

export type PerformanceUncheckedCreateWithoutClassInput = {
  id?: string
  student_id: string
  subject_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceCreateOrConnectWithoutClassInput = {
  where: Prisma.PerformanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PerformanceCreateWithoutClassInput, Prisma.PerformanceUncheckedCreateWithoutClassInput>
}

export type PerformanceCreateManyClassInputEnvelope = {
  data: Prisma.PerformanceCreateManyClassInput | Prisma.PerformanceCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type PerformanceUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.PerformanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PerformanceUpdateWithoutClassInput, Prisma.PerformanceUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.PerformanceCreateWithoutClassInput, Prisma.PerformanceUncheckedCreateWithoutClassInput>
}

export type PerformanceUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.PerformanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PerformanceUpdateWithoutClassInput, Prisma.PerformanceUncheckedUpdateWithoutClassInput>
}

export type PerformanceUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.PerformanceScalarWhereInput
  data: Prisma.XOR<Prisma.PerformanceUpdateManyMutationInput, Prisma.PerformanceUncheckedUpdateManyWithoutClassInput>
}

export type PerformanceCreateWithoutSubjectInput = {
  id?: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
  student: Prisma.StudentCreateNestedOneWithoutPerformancesInput
  class: Prisma.ClassCreateNestedOneWithoutPerformanceInput
}

export type PerformanceUncheckedCreateWithoutSubjectInput = {
  id?: string
  student_id: string
  class_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceCreateOrConnectWithoutSubjectInput = {
  where: Prisma.PerformanceWhereUniqueInput
  create: Prisma.XOR<Prisma.PerformanceCreateWithoutSubjectInput, Prisma.PerformanceUncheckedCreateWithoutSubjectInput>
}

export type PerformanceCreateManySubjectInputEnvelope = {
  data: Prisma.PerformanceCreateManySubjectInput | Prisma.PerformanceCreateManySubjectInput[]
  skipDuplicates?: boolean
}

export type PerformanceUpsertWithWhereUniqueWithoutSubjectInput = {
  where: Prisma.PerformanceWhereUniqueInput
  update: Prisma.XOR<Prisma.PerformanceUpdateWithoutSubjectInput, Prisma.PerformanceUncheckedUpdateWithoutSubjectInput>
  create: Prisma.XOR<Prisma.PerformanceCreateWithoutSubjectInput, Prisma.PerformanceUncheckedCreateWithoutSubjectInput>
}

export type PerformanceUpdateWithWhereUniqueWithoutSubjectInput = {
  where: Prisma.PerformanceWhereUniqueInput
  data: Prisma.XOR<Prisma.PerformanceUpdateWithoutSubjectInput, Prisma.PerformanceUncheckedUpdateWithoutSubjectInput>
}

export type PerformanceUpdateManyWithWhereWithoutSubjectInput = {
  where: Prisma.PerformanceScalarWhereInput
  data: Prisma.XOR<Prisma.PerformanceUpdateManyMutationInput, Prisma.PerformanceUncheckedUpdateManyWithoutSubjectInput>
}

export type PerformanceCreateManyStudentInput = {
  id?: string
  class_id: string
  subject_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  class?: Prisma.ClassUpdateOneRequiredWithoutPerformanceNestedInput
  subject?: Prisma.SubjectUpdateOneRequiredWithoutPerformanceNestedInput
}

export type PerformanceUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  subject_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  subject_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceCreateManyClassInput = {
  id?: string
  student_id: string
  subject_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  student?: Prisma.StudentUpdateOneRequiredWithoutPerformancesNestedInput
  subject?: Prisma.SubjectUpdateOneRequiredWithoutPerformanceNestedInput
}

export type PerformanceUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  subject_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  subject_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceCreateManySubjectInput = {
  id?: string
  student_id: string
  class_id: string
  score: number
  datetime?: Date | string
  created_at?: Date | string
  updated_at?: Date | string
  deleted_at?: Date | string | null
}

export type PerformanceUpdateWithoutSubjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  student?: Prisma.StudentUpdateOneRequiredWithoutPerformancesNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutPerformanceNestedInput
}

export type PerformanceUncheckedUpdateWithoutSubjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type PerformanceUncheckedUpdateManyWithoutSubjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  student_id?: Prisma.StringFieldUpdateOperationsInput | string
  class_id?: Prisma.StringFieldUpdateOperationsInput | string
  score?: Prisma.FloatFieldUpdateOperationsInput | number
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type PerformanceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  subject_id?: boolean
  score?: boolean
  datetime?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  subject?: boolean | Prisma.SubjectDefaultArgs<ExtArgs>
}, ExtArgs["result"]["performance"]>

export type PerformanceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  subject_id?: boolean
  score?: boolean
  datetime?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  subject?: boolean | Prisma.SubjectDefaultArgs<ExtArgs>
}, ExtArgs["result"]["performance"]>

export type PerformanceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  subject_id?: boolean
  score?: boolean
  datetime?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  subject?: boolean | Prisma.SubjectDefaultArgs<ExtArgs>
}, ExtArgs["result"]["performance"]>

export type PerformanceSelectScalar = {
  id?: boolean
  student_id?: boolean
  class_id?: boolean
  subject_id?: boolean
  score?: boolean
  datetime?: boolean
  created_at?: boolean
  updated_at?: boolean
  deleted_at?: boolean
}

export type PerformanceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "student_id" | "class_id" | "subject_id" | "score" | "datetime" | "created_at" | "updated_at" | "deleted_at", ExtArgs["result"]["performance"]>
export type PerformanceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  subject?: boolean | Prisma.SubjectDefaultArgs<ExtArgs>
}
export type PerformanceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  subject?: boolean | Prisma.SubjectDefaultArgs<ExtArgs>
}
export type PerformanceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  subject?: boolean | Prisma.SubjectDefaultArgs<ExtArgs>
}

export type $PerformancePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Performance"
  objects: {
    student: Prisma.$StudentPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs>
    subject: Prisma.$SubjectPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    student_id: string
    class_id: string
    subject_id: string
    score: number
    datetime: Date
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
  }, ExtArgs["result"]["performance"]>
  composites: {}
}

export type PerformanceGetPayload<S extends boolean | null | undefined | PerformanceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PerformancePayload, S>

export type PerformanceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PerformanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PerformanceCountAggregateInputType | true
  }

export interface PerformanceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Performance'], meta: { name: 'Performance' } }
  /**
   * Find zero or one Performance that matches the filter.
   * @param {PerformanceFindUniqueArgs} args - Arguments to find a Performance
   * @example
   * // Get one Performance
   * const performance = await prisma.performance.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PerformanceFindUniqueArgs>(args: Prisma.SelectSubset<T, PerformanceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Performance that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PerformanceFindUniqueOrThrowArgs} args - Arguments to find a Performance
   * @example
   * // Get one Performance
   * const performance = await prisma.performance.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PerformanceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PerformanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Performance that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceFindFirstArgs} args - Arguments to find a Performance
   * @example
   * // Get one Performance
   * const performance = await prisma.performance.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PerformanceFindFirstArgs>(args?: Prisma.SelectSubset<T, PerformanceFindFirstArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Performance that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceFindFirstOrThrowArgs} args - Arguments to find a Performance
   * @example
   * // Get one Performance
   * const performance = await prisma.performance.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PerformanceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PerformanceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Performances that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Performances
   * const performances = await prisma.performance.findMany()
   * 
   * // Get first 10 Performances
   * const performances = await prisma.performance.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const performanceWithIdOnly = await prisma.performance.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PerformanceFindManyArgs>(args?: Prisma.SelectSubset<T, PerformanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Performance.
   * @param {PerformanceCreateArgs} args - Arguments to create a Performance.
   * @example
   * // Create one Performance
   * const Performance = await prisma.performance.create({
   *   data: {
   *     // ... data to create a Performance
   *   }
   * })
   * 
   */
  create<T extends PerformanceCreateArgs>(args: Prisma.SelectSubset<T, PerformanceCreateArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Performances.
   * @param {PerformanceCreateManyArgs} args - Arguments to create many Performances.
   * @example
   * // Create many Performances
   * const performance = await prisma.performance.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PerformanceCreateManyArgs>(args?: Prisma.SelectSubset<T, PerformanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Performances and returns the data saved in the database.
   * @param {PerformanceCreateManyAndReturnArgs} args - Arguments to create many Performances.
   * @example
   * // Create many Performances
   * const performance = await prisma.performance.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Performances and only return the `id`
   * const performanceWithIdOnly = await prisma.performance.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PerformanceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PerformanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Performance.
   * @param {PerformanceDeleteArgs} args - Arguments to delete one Performance.
   * @example
   * // Delete one Performance
   * const Performance = await prisma.performance.delete({
   *   where: {
   *     // ... filter to delete one Performance
   *   }
   * })
   * 
   */
  delete<T extends PerformanceDeleteArgs>(args: Prisma.SelectSubset<T, PerformanceDeleteArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Performance.
   * @param {PerformanceUpdateArgs} args - Arguments to update one Performance.
   * @example
   * // Update one Performance
   * const performance = await prisma.performance.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PerformanceUpdateArgs>(args: Prisma.SelectSubset<T, PerformanceUpdateArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Performances.
   * @param {PerformanceDeleteManyArgs} args - Arguments to filter Performances to delete.
   * @example
   * // Delete a few Performances
   * const { count } = await prisma.performance.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PerformanceDeleteManyArgs>(args?: Prisma.SelectSubset<T, PerformanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Performances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Performances
   * const performance = await prisma.performance.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PerformanceUpdateManyArgs>(args: Prisma.SelectSubset<T, PerformanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Performances and returns the data updated in the database.
   * @param {PerformanceUpdateManyAndReturnArgs} args - Arguments to update many Performances.
   * @example
   * // Update many Performances
   * const performance = await prisma.performance.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Performances and only return the `id`
   * const performanceWithIdOnly = await prisma.performance.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PerformanceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PerformanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Performance.
   * @param {PerformanceUpsertArgs} args - Arguments to update or create a Performance.
   * @example
   * // Update or create a Performance
   * const performance = await prisma.performance.upsert({
   *   create: {
   *     // ... data to create a Performance
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Performance we want to update
   *   }
   * })
   */
  upsert<T extends PerformanceUpsertArgs>(args: Prisma.SelectSubset<T, PerformanceUpsertArgs<ExtArgs>>): Prisma.Prisma__PerformanceClient<runtime.Types.Result.GetResult<Prisma.$PerformancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Performances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceCountArgs} args - Arguments to filter Performances to count.
   * @example
   * // Count the number of Performances
   * const count = await prisma.performance.count({
   *   where: {
   *     // ... the filter for the Performances we want to count
   *   }
   * })
  **/
  count<T extends PerformanceCountArgs>(
    args?: Prisma.Subset<T, PerformanceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PerformanceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Performance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PerformanceAggregateArgs>(args: Prisma.Subset<T, PerformanceAggregateArgs>): Prisma.PrismaPromise<GetPerformanceAggregateType<T>>

  /**
   * Group by Performance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PerformanceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PerformanceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PerformanceGroupByArgs['orderBy'] }
      : { orderBy?: PerformanceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PerformanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPerformanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Performance model
 */
readonly fields: PerformanceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Performance.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PerformanceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.ClassDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClassDefaultArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  subject<T extends Prisma.SubjectDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SubjectDefaultArgs<ExtArgs>>): Prisma.Prisma__SubjectClient<runtime.Types.Result.GetResult<Prisma.$SubjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Performance model
 */
export interface PerformanceFieldRefs {
  readonly id: Prisma.FieldRef<"Performance", 'String'>
  readonly student_id: Prisma.FieldRef<"Performance", 'String'>
  readonly class_id: Prisma.FieldRef<"Performance", 'String'>
  readonly subject_id: Prisma.FieldRef<"Performance", 'String'>
  readonly score: Prisma.FieldRef<"Performance", 'Float'>
  readonly datetime: Prisma.FieldRef<"Performance", 'DateTime'>
  readonly created_at: Prisma.FieldRef<"Performance", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"Performance", 'DateTime'>
  readonly deleted_at: Prisma.FieldRef<"Performance", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Performance findUnique
 */
export type PerformanceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * Filter, which Performance to fetch.
   */
  where: Prisma.PerformanceWhereUniqueInput
}

/**
 * Performance findUniqueOrThrow
 */
export type PerformanceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * Filter, which Performance to fetch.
   */
  where: Prisma.PerformanceWhereUniqueInput
}

/**
 * Performance findFirst
 */
export type PerformanceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * Filter, which Performance to fetch.
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Performances to fetch.
   */
  orderBy?: Prisma.PerformanceOrderByWithRelationInput | Prisma.PerformanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Performances.
   */
  cursor?: Prisma.PerformanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Performances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Performances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Performances.
   */
  distinct?: Prisma.PerformanceScalarFieldEnum | Prisma.PerformanceScalarFieldEnum[]
}

/**
 * Performance findFirstOrThrow
 */
export type PerformanceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * Filter, which Performance to fetch.
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Performances to fetch.
   */
  orderBy?: Prisma.PerformanceOrderByWithRelationInput | Prisma.PerformanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Performances.
   */
  cursor?: Prisma.PerformanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Performances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Performances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Performances.
   */
  distinct?: Prisma.PerformanceScalarFieldEnum | Prisma.PerformanceScalarFieldEnum[]
}

/**
 * Performance findMany
 */
export type PerformanceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * Filter, which Performances to fetch.
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Performances to fetch.
   */
  orderBy?: Prisma.PerformanceOrderByWithRelationInput | Prisma.PerformanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Performances.
   */
  cursor?: Prisma.PerformanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Performances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Performances.
   */
  skip?: number
  distinct?: Prisma.PerformanceScalarFieldEnum | Prisma.PerformanceScalarFieldEnum[]
}

/**
 * Performance create
 */
export type PerformanceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * The data needed to create a Performance.
   */
  data: Prisma.XOR<Prisma.PerformanceCreateInput, Prisma.PerformanceUncheckedCreateInput>
}

/**
 * Performance createMany
 */
export type PerformanceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Performances.
   */
  data: Prisma.PerformanceCreateManyInput | Prisma.PerformanceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Performance createManyAndReturn
 */
export type PerformanceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * The data used to create many Performances.
   */
  data: Prisma.PerformanceCreateManyInput | Prisma.PerformanceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Performance update
 */
export type PerformanceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * The data needed to update a Performance.
   */
  data: Prisma.XOR<Prisma.PerformanceUpdateInput, Prisma.PerformanceUncheckedUpdateInput>
  /**
   * Choose, which Performance to update.
   */
  where: Prisma.PerformanceWhereUniqueInput
}

/**
 * Performance updateMany
 */
export type PerformanceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Performances.
   */
  data: Prisma.XOR<Prisma.PerformanceUpdateManyMutationInput, Prisma.PerformanceUncheckedUpdateManyInput>
  /**
   * Filter which Performances to update
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * Limit how many Performances to update.
   */
  limit?: number
}

/**
 * Performance updateManyAndReturn
 */
export type PerformanceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * The data used to update Performances.
   */
  data: Prisma.XOR<Prisma.PerformanceUpdateManyMutationInput, Prisma.PerformanceUncheckedUpdateManyInput>
  /**
   * Filter which Performances to update
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * Limit how many Performances to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Performance upsert
 */
export type PerformanceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * The filter to search for the Performance to update in case it exists.
   */
  where: Prisma.PerformanceWhereUniqueInput
  /**
   * In case the Performance found by the `where` argument doesn't exist, create a new Performance with this data.
   */
  create: Prisma.XOR<Prisma.PerformanceCreateInput, Prisma.PerformanceUncheckedCreateInput>
  /**
   * In case the Performance was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PerformanceUpdateInput, Prisma.PerformanceUncheckedUpdateInput>
}

/**
 * Performance delete
 */
export type PerformanceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
  /**
   * Filter which Performance to delete.
   */
  where: Prisma.PerformanceWhereUniqueInput
}

/**
 * Performance deleteMany
 */
export type PerformanceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Performances to delete
   */
  where?: Prisma.PerformanceWhereInput
  /**
   * Limit how many Performances to delete.
   */
  limit?: number
}

/**
 * Performance without action
 */
export type PerformanceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Performance
   */
  select?: Prisma.PerformanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Performance
   */
  omit?: Prisma.PerformanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerformanceInclude<ExtArgs> | null
}
